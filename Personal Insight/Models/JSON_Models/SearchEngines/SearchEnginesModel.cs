// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using Personal_Insight.Models.JSON_Models.SearchEngines;
//
//    var searchEnginesModel = SearchEnginesModel.FromJson(jsonString);

namespace Personal_Insight.Models.JSON_Models.SearchEngines
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class SearchEnginesModel
    {
        [JsonProperty("Search Engines")]
        public List<SearchEngine> SearchEngines { get; set; }
    }

    public partial class SearchEngine
    {
        [JsonProperty("suggestions_url")]
        public string SuggestionsUrl { get; set; }

        [JsonProperty("favicon_url")]
        public Uri FaviconUrl { get; set; }

        [JsonProperty("safe_for_autoreplace")]
        public bool SafeForAutoreplace { get; set; }

        [JsonProperty("date_created")]
        public double DateCreated { get; set; }

        [JsonProperty("url")]
        public string Url { get; set; }

        [JsonProperty("new_tab_url")]
        public string NewTabUrl { get; set; }

        [JsonProperty("originating_url")]
        public Uri OriginatingUrl { get; set; }

        [JsonProperty("sync_guid")]
        public Guid SyncGuid { get; set; }

        [JsonProperty("short_name")]
        public string ShortName { get; set; }

        [JsonProperty("keyword")]
        public string Keyword { get; set; }

        [JsonProperty("input_encodings")]
        public string InputEncodings { get; set; }

        [JsonProperty("prepopulate_id")]
        public long PrepopulateId { get; set; }

        [JsonProperty("last_modified")]
        public double LastModified { get; set; }
    }

    public partial class SearchEnginesModel
    {
        public static SearchEnginesModel FromJson(string json) => JsonConvert.DeserializeObject<SearchEnginesModel>(json, Personal_Insight.Models.JSON_Models.SearchEngines.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this SearchEnginesModel self) => JsonConvert.SerializeObject(self, Personal_Insight.Models.JSON_Models.SearchEngines.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
